{"version":3,"sources":["index.js"],"names":["Square","props","index","value","x","rows","y","Math","floor","classes","className","onClick","handleClick","style","w","h","src","alt","cols","Board","state","squares","Array","keys","map","i","width","window","innerWidth","height","innerHeight","setInterval","setState","result","this","row","length","push","slice","neighbors","neighborsOf","alert","renderSquare","React","Component","Game","hasLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f909515.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    const index = props.value;\r\n    const x = index % props.rows;\r\n    const y = Math.floor(index / props.rows);\r\n    let classes = \"square\";\r\n    if (index === 3) {\r\n        classes += \" selected\";\r\n    }\r\n    return (\r\n        <td className={classes} onClick={() => props.handleClick()} style={{\"width\": props.w, \"height\": props.h}}>\r\n            <img src=\"img/camping.jpg\" alt=\"stub\" style={{\r\n                \"margin-top\" : -y*props.h + \"px\",\r\n                \"width\": props.cols*props.w + \"px\",\r\n                \"height\" : props.rows*props.h + \"px\",\r\n                \"margin-left\": -x*props.w + \"px\",\r\n            }}/>\r\n        </td>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var x = 3;\r\n        var y = 3;\r\n        this.state = { squares: [...Array(9).keys()].map( i => i === 0 ? null : i ), cols: x, rows: y, width: window.innerWidth, height: window.innerHeight };\r\n\r\n        setInterval(() => {\r\n            this.setState({...this.state, width: window.innerWidth, height: window.innerHeight});\r\n        }, 2000);\r\n    }\r\n\r\n    neighborsOf(i) {\r\n        var result = [];\r\n        var w = this.state.width;\r\n        var row = Math.floor(i / this.state.width);\r\n\r\n        //Down one row\r\n        if (i + w < this.state.squares.length) {\r\n            result.push(i + w)\r\n        }\r\n        //Up one \r\n        if (i - w >= 0) {\r\n            result.push(i - w);\r\n        }\r\n        //Right\r\n        if (Math.floor((i + 1) / w) === row) {\r\n            result.push(i + 1);\r\n        }\r\n        //Left\r\n        if (i > 0 && Math.floor((i - 1) / w) === row) {\r\n            result.push(i - 1);\r\n        }\r\n\r\n        return result;\r\n    }\r\n    \r\n    handleClick(i) {\r\n        const squares = this.state.squares.slice();\r\n\r\n        var neighbors = this.neighborsOf(i);\r\n        alert(neighbors);\r\n\r\n        this.setState({...this.state, squares: squares });\r\n    }\r\n\r\n    renderSquare(i) {\r\n        const aspect = 4/3;\r\n        let width = 0.9*(window.innerWidth) / 3;\r\n        let height = 0.9*(window.innerHeight) / 3;\r\n        if (width / height > aspect) {\r\n            width = height * aspect;\r\n        }\r\n        else {\r\n            height = width / aspect;\r\n        }\r\n        return <Square \r\n        value={this.state.squares[i]} \r\n        handleClick={() => this.handleClick(i)} \r\n        w = {width}\r\n        h = {height}\r\n        rows = {this.state.rows}\r\n        cols = {this.state.cols}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <center>\r\n            <table className=\"grid\">\r\n                <tr className=\"board-row\">\r\n                    {this.renderSquare(null)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </tr>\r\n                <tr className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </tr>\r\n                <tr className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </tr>\r\n            </table>\r\n            </center>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {hasLocation: false};\r\n\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                this.setState({coords: position.coords, hasLocation: true});\r\n            });\r\n        } else {\r\n            this.setState({hasLocation: false});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { this.state.hasLocation \r\n                ? <p> Location: {this.state.coords.latitude}, {this.state.coords.longitude} </p> \r\n                : <p> Location unavailable! </p> }    \r\n                \r\n                <Board />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}